----------------------------------------------------------------------------------------------------------------------
There are two types of number specification in Verilog: sized and unsized.

Sized numbers
Sized numbers are represented as <size> '<base format> <number>

4'b1111 // This is a 4-bit binary number
12'habc // This is a 12-bit hexadecimal number
16'd255 // This is a 16-bit decimal number.

Unsized numbers
Numbers that are specified without a <base format> specification are decimal numbers
by default. Numbers that are written without a <size> specification have a default number
of bits that is simulator- and machine-specific (must be at least 32).

23456 // This is a 32-bit decimal number by default
'hc3 // This is a 32-bit hexadecimal number
'o21 // This is a 32-bit octal number

Underscore characters and question marks
An underscore character "_" is allowed anywhere in a number except the first character.
Underscore characters are allowed only to improve readability of numbers and are
ignored by Verilog.

A question mark "?" is the Verilog HDL alternative for z in the context of numbers.

12'b1111_0000_1010 // Use of underline characters for readability
4'b10?? // Equivalent of a 4'b10zz

------------------------------------------------------------------------------------------------------------------------

Source: https://www.youtube.com/watch?v=hgzuxRc7n6M&list=PLZU5hLL_713x0_AV_rVbay0pWmED7992G&index=7&ab_channel=AdiTeman

|| Rules ||

-- Inside the combinational always block, always use blocking assignment (=)
-- Inside the sequential always block, always use non-blocking assignment (<=)
-- Do not mix blocking and non-blocking assignments in the same always block
-- Do not assign to the same variable from more than one always block
-- In a combinational always block, there are statements with blocking assignment, which has variables in the left hand side and right hand side. Always add all the variables
   in the RHS in the sensitivity list.
-- Make sure that every if has an else block, specially in the combinational always block. Otherwise during synthesis.
-- "assign" statement is used outside of always block, while to assign a variable inside the always block the blocking (=) and non-blockin (<=) assignment is used for
    combinational and sequential always block respectively. In that case the variable in LhS should be declared as "reg"
    
    
    
|| Note ||
-- By default verilog treats all vectors as unsigned
-- To make a constant signed add s after apostrophe, 10'sh37C
